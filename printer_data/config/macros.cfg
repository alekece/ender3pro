[gcode_macro START_PRINT]
gcode:
    {% set bed_temp = params.BED_TEMP|default(60)|float %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(190)|float %}
    {% set extruder_mesh_temp = 170|float %}

    G90 ; Use absolute coordinates
    M83 ; Extruder relative mode
    M104 S{extruder_mesh_temp} ; Set extruder temperature for bed leveling
    M140 S{bed_temp} ; Set bed temperature
    
    SMART_HOME ; Home axes

    ; Wait for bed leveling temperature
    M109 S{extruder_mesh_temp}
    M190 S{bed_temp}

    ; Perform bed mesh calibration
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE

    M104 S{extruder_temp} ; Set extruder temperature
    SMART_PARK
    M109 S{extruder_temp} ; Wait for extruder temperature

    CLEAN_NOZZLE ; Clean nozzle
    LINE_PURGE ; Purge nozzle

[gcode_macro END_PRINT]
gcode:
    BED_MESH_CLEAR ; Clear the mesh and removes all Z adjustements.

    G91 ; Relative positioning
    G1 E-2 F2700 ; Retract a bit
    G1 E-2 Z2 F2400 ; Retract and raise Z
    G1 X5 Y5 F3000 ; Wipe out

    SHOW_PRINT

    M106 S0 ; Turn off fan
    M104 S0 ; Turn off hotend
    M140 S0 ; Turn off bed
    M84 X Y E ; Disable all steppers but Z


[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    {% set y = params.Y|default(220)|float %}
    {% set x = params.X|default(215)|float %}

    SAVE_GCODE_STATE NAME=show_print
    G90 ; Use absolute positioning
    G1 X{x} Y{y} F6000 ; Present print
    RESTORE_GCODE_STATE NAME=show_print

[gcode_macro SECURE_NOZZLE]
description: Raises Z axis up to avoid any damage on the printer
gcode:
    {% set z_offset = [printer.toolhead.axis_maximum.z - printer.toolhead.position.z, params.Z_OFFSET|default(2)|float]|min %}

    SAVE_GCODE_STATE NAME=secure_nozzle
    G91 ; Use relative positioning
    G1 Z{z_offset}
    RESTORE_GCODE_STATE NAME=secure_nozzle

[gcode_macro SMART_HOME]
description: Only home not homed axes
gcode:
    {% set home_axes = [] %}
    {% for axis in ["X", "Y", "Z"] %}
        {% if not axis|lower in printer.toolhead.homed_axes %}
            {% set _ = home_axes.append(axis) %}
        {% endif %}
    {% endfor %}
    {% if home_axes|length > 0 %}
        { action_respond_info("Home %s" % home_axes|join(" ")) }
        G28 {home_axes|join(" ")}
    {% endif %}

[gcode_macro CENTER_NOZZLE]
description: Move the nozzle to the center of the bed
variable_y_offset: 25
gcode:
    {% set bed_length = printer.configfile.settings.stepper_x.position_max - printer.configfile.settings.stepper_x.position_min %}
    {% set bed_width = printer.configfile.settings.stepper_y.position_max - printer.configfile.settings.stepper_y.position_min %}
    {% set x = bed_width / 2|float %}
    {% set y = bed_length / 2 + y_offset|float %}

    SAVE_GCODE_STATE NAME=center_nozzle
    G90 ; Use absolute positioning
    G1 X{x} Y{y} F6000 ; Move the nozzle to the center of the bed
    RESTORE_GCODE_STATE NAME=center_nozzle

[gcode_macro TIMELAPSE_PARK]
description: Move the nozzle to the timelapse park position
gcode: 
  {% set timelapse = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
  {% set x = timelapse.park.coord.x %}
  {% set y = timelapse.park.coord.y %}

  SAVE_GCODE_STATE NAME=timelapse_park
  G90 ; Use absolute positioning
  G1 X{x} Y{y} F6000
  RESTORE_GCODE_STATE NAME=timelapse_park

[gcode_macro CLEAN_NOZZLE]
description: Clean the nozzle using a brass brush
variable_brush: { 'x': 152, 'y': 16, 'z': 4 }
variable_wipe: { 'count': 5, 'speed': 6000, 'distance': 43 }
gcode:
    SECURE_NOZZLE Z_OFFSET={brush.z}

    SAVE_GCODE_STATE NAME=clean_nozzle
    G90 ; Use absolute positioning

    G1 X{brush.x} Y{brush.y} F6000
    G1 Z{brush.z}

    {% for _ in range(1, wipe.count + 1) %}
        G1 X{brush.x + wipe.distance} F{wipe.speed}
        G1 X{brush.x} F{wipe.speed}
    {% endfor %}

    RESTORE_GCODE_STATE NAME=clean_nozzle

    SECURE_NOZZLE
    
[gcode_macro PERFORM_BACKUP]
description: Save all new modifications in a remote repository
gcode: RUN_SHELL_COMMAND CMD=perform_backup

[gcode_shell_command perform_backup]
command: /home/pi/klipper-backup/script.sh
timeout: 60.0
verbose: True

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from extruder
gcode:
    SAVE_GCODE_STATE NAME=unload_filament
    G92 E0 ; Reset extruder position
    G1 E-50 F600 ; Perform the unload
    G1 E-50 F300 ; Finish the unload
    RESTORE_GCODE_STATE NAME=unload_filament

[gcode_macro LOAD_FILAMENT]
description: Load filament into the extruder
gcode:
    SAVE_GCODE_STATE NAME=load_filament
    G91 ; Use relative positioning
    G1 E50 F300 ; Load filament
    G4 P900 ; Dwell
    G1 E25 F300 ; Extrude a little more
    RESTORE_GCODE_STATE NAME=load_filament

[gcode_macro M600]
description: Filament change
gcode: PAUSE X=117.5 Y=15 Z_MIN=50

[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 2.0  ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 2.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode: